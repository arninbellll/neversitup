{"remainingRequest":"/Users/arninbell/Documents/neversitup/todo-app/node_modules/babel-loader/lib/index.js!/Users/arninbell/Documents/neversitup/todo-app/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/arninbell/Documents/neversitup/todo-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arninbell/Documents/neversitup/todo-app/src/views/todo_list.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/arninbell/Documents/neversitup/todo-app/src/views/todo_list.vue","mtime":1675154124233},{"path":"/Users/arninbell/Documents/neversitup/todo-app/babel.config.js","mtime":1674903016353},{"path":"/Users/arninbell/Documents/neversitup/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arninbell/Documents/neversitup/todo-app/node_modules/babel-loader/lib/index.js","mtime":456789000000},{"path":"/Users/arninbell/Documents/neversitup/todo-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arninbell/Documents/neversitup/todo-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7CmltcG9ydCB7IG1kaVBsdXMsIG1kaUNoZWNrQ2lyY2xlT3V0bGluZSwgbWRpQ2xvc2VDaXJjbGVPdXRsaW5lLCBtZGlMaXN0Qm94T3V0bGluZSB9IGZyb20gIkBtZGkvanMiOwppbXBvcnQgQ29udmVydGVyIGZyb20gIi4uL2NvbnZlcnRlci9mb3JtYXRlRGF0ZVRpbWUiOwppbXBvcnQgRGlhbG9nQWRkIGZyb20gIi4uL2NvbXBvbmVudHMvZGlhbG9nX2FkZFRvZG8udnVlIjsKaW1wb3J0IERpYWxvZ0RldGFpbCBmcm9tICIuLi9jb21wb25lbnRzL2RpYWxvZ19kZXRhaWxUb2RvLnZ1ZSI7CmltcG9ydCBTd2FsIGZyb20gInN3ZWV0YWxlcnQyIjsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHsKICAgIERpYWxvZ0FkZCwKICAgIERpYWxvZ0RldGFpbAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGljb25zOiB7CiAgICAgICAgbWRpUGx1cywKICAgICAgICBtZGlDaGVja0NpcmNsZU91dGxpbmUsCiAgICAgICAgbWRpQ2xvc2VDaXJjbGVPdXRsaW5lLAogICAgICAgIG1kaUxpc3RCb3hPdXRsaW5lCiAgICAgIH0sCiAgICAgIGxvYWRpbmc6IGZhbHNlLAogICAgICBvdmVybGF5OiBmYWxzZSwKICAgICAgb3Blbl9kaWFsb2dBZGQ6IGZhbHNlLAogICAgICBvcGVuX2RpYWxvZ0RldGFpbDogZmFsc2UsCiAgICAgIGlkOiAiIiwKICAgICAgbGlzdE1vY2s6IFt7CiAgICAgICAgdGV4dDogIlRPIERvIDEiLAogICAgICAgIGRhdGU6ICIxMC8xMC8yMDIzIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIlRPIERvIDIiLAogICAgICAgIGRhdGU6ICIxMC8xMC8yMDIzIgogICAgICB9LCB7CiAgICAgICAgdGV4dDogIlRPIERvIDMiLAogICAgICAgIGRhdGU6ICIxMC8xMC8yMDIzIgogICAgICB9XSwKICAgICAgbGlzdFRvZG86IFtdLAogICAgICBsaXN0RG9uZTogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBhc3luYyBmbl9nZXRMaXN0VG9kbygpIHsKICAgICAgY29uc29sZS5sb2codGhpcy4kY29va2llcy5nZXQoInRvZG9fdG9rZW4iKSk7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5sb2FkaW5nID0gdHJ1ZTsKICAgICAgICB0aGlzLm92ZXJsYXkgPSB0cnVlOwogICAgICAgIGxldCB0ayA9IHRoaXMuJGNvb2tpZXMuZ2V0KCJ0b2RvX3Rva2VuIik7CiAgICAgICAgbGV0IGhlYWRlcl9hcGkgPSB7CiAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgIGF1dGhvcml6YXRpb246ICJCZWFyZXIgIiArIHRrCiAgICAgICAgICB9CiAgICAgICAgfTsKICAgICAgICBsZXQgY2FsbF9hcGkgPSBhd2FpdCB0aGlzLmF4aW9zLmdldChwcm9jZXNzLmVudi5WVUVfQVBQX0FQSV9UT0RPICsgIi90b2RvcyIsIGhlYWRlcl9hcGkpOwogICAgICAgIGNvbnNvbGUubG9nKGNhbGxfYXBpLCAiIEFBUFAiKTsKICAgICAgICBpZiAoY2FsbF9hcGkuc3RhdHVzVGV4dCA9PT0gIk9LIikgewogICAgICAgICAgdGhpcy5saXN0VG9kbyA9IGNhbGxfYXBpLmRhdGE7CiAgICAgICAgfQogICAgICAgIHRoaXMubG9hZGluZyA9IGZhbHNlOwogICAgICAgIHRoaXMub3ZlcmxheSA9IGZhbHNlOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTsKICAgICAgICB0aGlzLm92ZXJsYXkgPSBmYWxzZTsKICAgICAgfQogICAgfSwKICAgIGFzeW5jIGZuX2RlbGV0ZVRvZG8oX2l0ZW0pIHsKICAgICAgdHJ5IHsKICAgICAgICBsZXQgdGsgPSB0aGlzLiRjb29raWVzLmdldCgidG9kb190b2tlbiIpOwogICAgICAgIGxldCBoZWFkZXJfYXBpID0gewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICBhdXRob3JpemF0aW9uOiAiQmVhcmVyICIgKyB0awogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgbGV0IGNhbGxfYXBpID0gYXdhaXQgdGhpcy5heGlvcy5kZWxldGUocHJvY2Vzcy5lbnYuVlVFX0FQUF9BUElfVE9ETyArICIvdG9kb3MvIiArIF9pdGVtLl9pZCwgaGVhZGVyX2FwaSk7CiAgICAgICAgaWYgKGNhbGxfYXBpLnN0YXR1c1RleHQgPT09ICJPSyIpIHsKICAgICAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgICAgIGljb246ICJzdWNjZXNzIiwKICAgICAgICAgICAgdGl0bGU6ICJEZWxldGUgdG9kbyIsCiAgICAgICAgICAgIHRleHQ6ICJEZWxldGUgdG8gZG8gaW4geW91ciB0YXNrIHN1Y2Nlc3MhIgogICAgICAgICAgfSk7CiAgICAgICAgICB0aGlzLiRlbWl0KCJjbG9zZSIpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICBjb25zb2xlLmxvZyhlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBmbl9hZGRMaXN0KGl0ZW0pIHsKICAgICAgY29uc29sZS5sb2coaXRlbSk7CiAgICAgIHRoaXMubGlzdERvbmUucHVzaChpdGVtKTsKICAgICAgY29uc29sZS5sb2codGhpcy5saXN0RG9uZSwgIkRPTSIpOwogICAgfSwKICAgIGZuX2ZpbmQoKSB7fSwKICAgIGZuX2dvdG9EZXRhaWwoX2l0ZW0pIHsKICAgICAgY29uc29sZS5sb2coX2l0ZW0pOwogICAgICB0aGlzLmlkID0gX2l0ZW0uX2lkOwogICAgICB0aGlzLm9wZW5fZGlhbG9nRGV0YWlsID0gdHJ1ZTsKICAgIH0sCiAgICBmbl9jbG9zZSgpIHsKICAgICAgdGhpcy5mbl9nZXRMaXN0VG9kbygpOwogICAgICB0aGlzLm9wZW5fZGlhbG9nRGV0YWlsID0gZmFsc2U7CiAgICAgIHRoaXMub3Blbl9kaWFsb2dBZGQgPSBmYWxzZTsKICAgIH0sCiAgICAvLyDguYHguJvguKXguIfguKfguLHguJnguJfguLXguYjguIjguLLguIEgdGltZXN0YW1wCiAgICBmbl9mb3JtYXRkYXRldGltZXN0YW1wKF9kYXRlLCBfZm9ybWF0KSB7CiAgICAgIHJldHVybiBDb252ZXJ0ZXIudGltZXN0YW1wVG9ZWVlZTU1ERChfZGF0ZSwgX2Zvcm1hdCk7CiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgY29uc29sZS5sb2codGhpcy4kc3RvcmUuZ2V0dGVycy5nZXR0ZXJzVG9rZW4sICJFRSIpOwogICAgdGhpcy5mbl9nZXRMaXN0VG9kbygpOwogIH0KfTs="},{"version":3,"mappings":";AA+HA,SACAA,SACAC,uBACAC,uBACAC,yBACA;AACA;AACA;AACA;AACA;AAEA;EACAC;IAAAC;IAAAC;EAAA;EACAC;IACA;MACAC;QACAR;QACAC;QACAC;QACAC;MACA;MACAM;MACAC;MACAC;MACAC;MACAC;MACAC,WACA;QAAAC;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,GACA;QAAAD;QAAAC;MAAA,EACA;MACAC;MACAC;IACA;EACA;EACAC;IACA;MACAC;MACA;QACA;QACA;QACA;QAEA;UACAC;YACAC;UACA;QACA;QACA,oCACAC,yCACAC,WACA;QACAJ;QACA;UACA;QACA;QACA;QACA;MACA;QACAA;QACA;MACA;IACA;IACA;MACA;QACA;QACA;UACAC;YACAC;UACA;QACA;QACA,uCACAC,sDACAC,WACA;QACA;UACAC;YACAC;YACAC;YACAZ;UACA;UACA;QACA;MACA;QACAK;MACA;IACA;IACAQ;MACAR;MACA;MACAA;IACA;IACAS;IACAC;MACAV;MACA;MACA;IACA;IACAW;MACA;MACA;MACA;IACA;IACA;IACAC;MACA;IACA;EACA;EACAC;IACAb;IACA;EACA;AACA","names":["mdiPlus","mdiCheckCircleOutline","mdiCloseCircleOutline","mdiListBoxOutline","components","DialogAdd","DialogDetail","data","icons","loading","overlay","open_dialogAdd","open_dialogDetail","id","listMock","text","date","listTodo","listDone","methods","console","headers","authorization","process","header_api","Swal","icon","title","fn_addList","fn_find","fn_gotoDetail","fn_close","fn_formatdatetimestamp","mounted"],"sourceRoot":"src/views","sources":["todo_list.vue"],"sourcesContent":["<template>\n  <v-app style=\"background-image: linear-gradient(0deg, #ebf3f9, #b2e7d6)\">\n    <v-container fill-height class=\"pa-4\">\n      <v-layout row warp class=\"ma-0\">\n        <v-flex lg12 xs12 md12 class=\"pa-2\">\n          <v-card>\n            <h1 class=\"pa-4\">TODO</h1>\n            <v-divider></v-divider>\n\n            <v-card-text>\n              <v-layout v-if=\"listTodo.length > 0\" row wrap>\n                <v-flex lg12 md12 xs12 class=\"text-left\">\n                  <v-list>\n                    <v-list-item-group>\n                      <v-list-item\n                        v-for=\"(item, index) in listTodo\"\n                        :key=\"index\"\n                        @dblclick=\"fn_gotoDetail(item)\"\n                      >\n                        <template>\n                          <v-list-item-content>\n                            <v-list-item-title class=\"pt-1 pb-1 pr-1\">\n                              <span>{{ item.title }}</span>\n                            </v-list-item-title>\n                            <v-list-item-subtitle>\n                              {{ item.description }}\n                            </v-list-item-subtitle>\n                          </v-list-item-content>\n                          <v-list-item-action>\n                            <v-icon @click=\"fn_addList(item)\" color=\"#49B18F\">{{\n                              icons.mdiCheckCircleOutline\n                            }}</v-icon>\n                            <v-list-item-action-text>{{\n                              fn_formatdatetimestamp(\n                                item.createdAt,\n                                \"dd-MM-yyyy hh:mm\"\n                              )\n                            }}</v-list-item-action-text>\n                          </v-list-item-action>\n                        </template>\n                      </v-list-item>\n                    </v-list-item-group>\n                  </v-list>\n                </v-flex>\n                <v-flex lg12 md12 xs12>\n                  <v-data-table\n                    :items=\"listTodo\"\n                    :show-select=\"true\"\n                    :single-select=\"true\"\n                    hide-default-footer\n                    hide-default-header\n\n                  >\n                    <template v-slot:item=\"props\">\n                        <tr class=\"ma-4\">\n                            <td>\n                                <v-checkbox @click=\"fn_addList(item)\"></v-checkbox>\n                            </td>\n                            <td>\n                                {{props.item.title}}\n                            </td>\n                             <td>\n                                {{props.item.description}}\n                            </td>\n                             <td>\n                               {{\n                              fn_formatdatetimestamp(\n                                props.item.createdAt,\n                                \"dd-MM-yyyy hh:mm\"\n                              )\n                              }}\n                            </td>\n                        </tr>\n\n                    </template>\n                  </v-data-table>\n                </v-flex>\n              </v-layout>\n              <v-layout v-else row wrap justify-center>\n                <v-flex lg12 md12 xs12 class=\"pa-2\">\n                  <v-icon size=\"64px\">{{ icons.mdiListBoxOutline }}</v-icon>\n                  <br />\n                  <br />\n                  <span>Empty press ' + ' for add new todo</span>\n                </v-flex>\n              </v-layout>\n              <v-divider></v-divider>\n              <v-card-actions class=\"text-center\">\n                <v-btn\n                  @click=\"open_dialogAdd = true\"\n                  fab\n                  color=\"#49B18F\"\n                  class=\"pa-2 mt-4\"\n                >\n                  <v-icon color=\"white\">{{ icons.mdiPlus }}</v-icon></v-btn\n                >\n                <v-badge color=\"#f25822\" :content=\"listDone.length\">\n                  <v-btn\n                    v-if=\"listDone.length > 0\"\n                    class=\"pa-2 mt-4\"\n                    color=\"#f25822\"\n                    fab\n                    @click=\"fn_deleteTodo(item)\"\n                  >\n                    <v-icon color=\"white\">{{\n                      icons.mdiCloseCircleOutline\n                    }}</v-icon>\n                  </v-btn>\n                </v-badge>\n              </v-card-actions>\n            </v-card-text>\n          </v-card>\n        </v-flex>\n      </v-layout>\n    </v-container>\n    <DialogAdd :show=\"open_dialogAdd\" @close=\"fn_close()\"></DialogAdd>\n    <DialogDetail\n      :show=\"open_dialogDetail\"\n      :id=\"id\"\n      @close=\"fn_close()\"\n    ></DialogDetail>\n    <v-overlay :value=\"overlay\">\n      <v-progress-circular indeterminate size=\"64\"></v-progress-circular>\n    </v-overlay>\n  </v-app>\n</template>\n<script>\nimport {\n  mdiPlus,\n  mdiCheckCircleOutline,\n  mdiCloseCircleOutline,\n  mdiListBoxOutline,\n} from \"@mdi/js\";\nimport Converter from \"../converter/formateDateTime\";\nimport DialogAdd from \"../components/dialog_addTodo.vue\";\nimport DialogDetail from \"../components/dialog_detailTodo.vue\";\nimport Swal from \"sweetalert2\";\n\nexport default {\n  components: { DialogAdd, DialogDetail },\n  data() {\n    return {\n      icons: {\n        mdiPlus,\n        mdiCheckCircleOutline,\n        mdiCloseCircleOutline,\n        mdiListBoxOutline,\n      },\n      loading: false,\n      overlay: false,\n      open_dialogAdd: false,\n      open_dialogDetail: false,\n      id: \"\",\n      listMock: [\n        { text: \"TO Do 1\", date: \"10/10/2023\" },\n        { text: \"TO Do 2\", date: \"10/10/2023\" },\n        { text: \"TO Do 3\", date: \"10/10/2023\" },\n      ],\n      listTodo: [],\n      listDone: [],\n    };\n  },\n  methods: {\n    async fn_getListTodo() {\n      console.log(this.$cookies.get(\"todo_token\"));\n      try {\n        this.loading = true;\n        this.overlay = true;\n        let tk = this.$cookies.get(\"todo_token\");\n\n        let header_api = {\n          headers: {\n            authorization: \"Bearer \" + tk,\n          },\n        };\n        let call_api = await this.axios.get(\n          process.env.VUE_APP_API_TODO + \"/todos\",\n          header_api\n        );\n        console.log(call_api, \" AAPP\");\n        if (call_api.statusText === \"OK\") {\n          this.listTodo = call_api.data;\n        }\n        this.loading = false;\n        this.overlay = false;\n      } catch (error) {\n        console.log(error);\n        this.overlay = false;\n      }\n    },\n    async fn_deleteTodo(_item) {\n      try {\n        let tk = this.$cookies.get(\"todo_token\");\n        let header_api = {\n          headers: {\n            authorization: \"Bearer \" + tk,\n          },\n        };\n        let call_api = await this.axios.delete(\n          process.env.VUE_APP_API_TODO + \"/todos/\" + _item._id,\n          header_api\n        );\n        if (call_api.statusText === \"OK\") {\n          Swal.fire({\n            icon: \"success\",\n            title: \"Delete todo\",\n            text: \"Delete to do in your task success!\",\n          });\n          this.$emit(\"close\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    },\n    fn_addList(item) {\n      console.log(item);\n      this.listDone.push(item);\n      console.log(this.listDone, \"DOM\");\n    },\n    fn_find() {},\n    fn_gotoDetail(_item) {\n      console.log(_item);\n      this.id = _item._id;\n      this.open_dialogDetail = true;\n    },\n    fn_close() {\n      this.fn_getListTodo();\n      this.open_dialogDetail = false;\n      this.open_dialogAdd = false;\n    },\n    // แปลงวันที่จาก timestamp\n    fn_formatdatetimestamp(_date, _format) {\n      return Converter.timestampToYYYYMMDD(_date, _format);\n    },\n  },\n  mounted() {\n    console.log(this.$store.getters.gettersToken, \"EE\");\n    this.fn_getListTodo();\n  },\n};\n</script>\n"]}]}